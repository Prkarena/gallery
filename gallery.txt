============================== Project create npm for gallery ===================================

1. index.js 
> call api
> sliderwithgallery

2. sliderwithgallery.js
> return sliderwithgallery

3. gallery.js 
> return gallery

4. galleryimage.js
>  return galleryimage to gallery



1. index.js
/**
 * 
 * index.js
 * 1. index.css : for style
 * 2. SliderWithGallery : Component which takes json data and give's gallery with slider
 * 3. state : 
 *    3.1 data : for storing our data
 *    3.2 isLoaded : for chacking data is loaded or not
 * 4. fetch : fetch response from url and change states 
 * 
 */

import React, { Component } from 'react';
import ReactDOM from 'react-dom';
/*------- index.css : For Style ---------- */
import './css/index.css';
/*-------- Components ---------------------*/
import SliderWithGallery from './components/SliderWithGallery/sliderwithgallery';

class App extends Component {

    state = {
        data : [],
        isLoaded : false,
    }

    componentWillMount(){
        fetch('https://picsum.photos/v2/list?page=1&limit=30')
             .then(response => response.json())
             .then(json => {
                 this.setState({
                     data : json,
                     isLoaded : true
                 })
             })
    }

    render(){
        const { isLoaded , data} = this.state;
        /*---- data is loaded or not ------*/        
        if(!isLoaded){
            return<div>Loading....</div>
        }else{
            return(                  
                    <div>
                        <SliderWithGallery data = {data}  />
                    </div>                
            )
        }

  
    }
}

ReactDOM.render(<App />, document.getElementById('root'));


2. sliderwithgallery.js
/**
 * 
 * SliderWithGallery
 *  1. sliderwithgallery.css : for style
 *  2. Components : 
 *     2.1 SliderTemplate : takes one object of our data and set it to slider
 *     2.2 Gallery : takes data and setIndex method and gave us image gallery 
 *  3. state : 
 *     3.1 data : data from props
 *     3.2 dataItem : store dataItem from our data
 *     3.3 show : bollen - true : for show slider and false for hide slider
 *  4. nextDataItem : function which set next data item to state
 *  5. prewDataItem : function which set previous data item to state
 *  6. showSlider : function which handle slider show or not using state variable show
 *  7. setIndex : function which set Index of dataitem to be shown in slider
 * 
 */

import React , { Component } from 'react';
/*------- slider.css : For Style ---------- */
import './sliderwithgallery.css';
/*-------- Components ---------------------*/
import SliderTemplate from '../SliderTemplate/slidertemplate';
import Gallery from '../Gallery/gallery';

class SliderWithGallery extends Component {
    
    state = {
        data : this.props.data,
        dataItem : this.props.data[0],
        show : false,
    }

    nextDataItem = () => {
        const newIndex = this.state.data.indexOf(this.state.dataItem)+1 ;
        this.setState({
            dataItem : this.props.data[newIndex]
        })
    }

    prewDataItem = () => {
        const newIndex = this.state.data.indexOf(this.state.dataItem)-1 ;
        this.setState({
            dataItem : this.props.data[newIndex]
        })
    }

    showSlider = (show) => {
        this.setState({
            show : show,
        })
    }

    setIndex = (i) => {
        this.setState({
            dataItem : this.state.data[i],
        })
        this.showSlider(true)
     }
      
    render(){

        let { data , dataItem, show } = this.state;
        {/*---- style of slider ---*/}
        let divStyle ={};
        {/*---- slider show or not ---*/}
        if(show){
            divStyle ={
                display : 'block'
            }
        }else{
            divStyle ={
                display : 'none'
            }
        }

        
        return(
            
            <div className="sliderWithGallery">
                {/*---- slider start ---*/}
                <div className="slider"
                    style = {divStyle}
                    >
                    {/*---- slider background div ---*/}
                    <div className="slider_background"></div>
                    {/*---- Close button ---*/}
                   <div
                    className="close_button"
                    >
                        <button
                        onClick = {() => this.showSlider(false)}
                        >X</button>
                    </div>
                    {/*---- slider previous and next button start ---*/}
                    <div className="sliderButton">
                        <button 
                        onClick = { () => this.prewDataItem() }
                        disabled = { data.indexOf(dataItem) === 0 }
                        className = "buttonPrew"
                        >
                            P              
                        </button>
                        <button 
                        onClick = { () => this.nextDataItem() }
                        disabled = { data.indexOf(dataItem) === data.length-1}
                        className = "buttonNext"
                        >
                            N  
                        </button>
                       </div>
                       {/*---- slider previous and next button end ---*/}
                    {/*---- sliderTemplate : takes one object and set it to slider ---*/}
                    <SliderTemplate property = { dataItem } />
                </div>
                {/*---- slider end ---*/}
                {/*---- Gallery : takes data and return image gallery ---*/}
                <Gallery data = { data } parentMethod = {this.setIndex} />
            </div>
        )
    }
}

export default SliderWithGallery;

2.1 slidertemplate.js
/**
 * 
 * SliderTemplate : take one object and set it to slider 
 * 
 */
import React from 'react';
/*------- slidertemplate.css : For Style ---------- */
import './slidertemplate.css';

const SliderTemplate = ({property}) => {
    const { download_url, author } = property;
    return(
        <div 
         className = "image" 
         >
           <img src={download_url} className="responsive" alt={author} />
        </div>
    )
}

export default SliderTemplate;


3. gallery.js

/**
 * 
 * Gallery : get data from props > call GalleryImage Component for each items
 * GalleryImage : takes one object and parentMethod from props and return images 
 * 
 */

import React from 'react';
/*------- gallery.css : For Style ---------- */
import './gallery.css';
/*-------- Components ---------------------*/
import GalleryImage from '../GalleryImage/galleryimage';

const Gallery = ({data,parentMethod}) => {
    
    const Image = data.map((item,index) => {
        return(
            <GalleryImage data = { item } index = { index } parentMethod ={parentMethod} key = {index} />
        )
    })
    
    return(
        <div className="gallery">
            <div className="gallery_images">
             {Image}
            </div>
           
        </div>
    )
}

export default Gallery;


4. GalleryImage.js
/**
 * 
 * GalleryImage : recive props and return gallery image
 * download_url : image src from json object 
 * 
 */
import React , { Component } from 'react';
/*------- galleryimage.css : For Style ---------- */
import './galleryimage.css';

const GalleryImage = (props) => {
    /*------ set index using parent method for which slide to be shown on image click-----*/
    const  setDataItemIndex = () => {
        props.parentMethod(props.index);
    }

    return(
        <div className="galleryImage" 
            onClick = {setDataItemIndex}
        >
             <img src={props.data.download_url} alt={props.data.author} />
        </div>
    )

   
}

export default GalleryImage;


